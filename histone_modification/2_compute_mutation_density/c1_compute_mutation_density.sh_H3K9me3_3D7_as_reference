#!/bin/bash
#SBATCH -n 1
#SBATCH -A evolgen-grp
#SBATCH -p evolgen
#SBATCH -o %x-%j.out

# FUNCTIONS TODO:
select_chrom_peak_nopeak_bed() {
    $bedtools complement -i $peak_file -g $chrom_len >$nopeak_file
    mkdir -p $chrom_bed_dir
    cd $chrom_bed_dir
    awk -F"\t" '{print > $1".peak.bed"}' $peak_file
    awk -F"\t" '{print > $1".nopeak.bed"}' $nopeak_file

}

get_chrom_treatment_control_histone_modification_level_bed() {
    mkdir -p $modifi_level_dir
    cd $modifi_level_dir
    awk -F"\t" '{print > $1".treat.bed"}' ../${treatment_level}
    awk -F"\t" '{print > $1".cont.bed"}' ../${control_level}
    cd -
}

get_sliding_window() {
    relative="0.05"
    for chrom in $(echo $autosomes | tr " " "\n"); do
        get_sliding_window_for_chrom $chrom "relative" $relative
    done
}

get_sliding_window_for_chrom() {
    chrom=$1
    flank_length_type=$2
    flank_length=$3
    peak_pos=$chrom_bed_dir/${chrom}.peak.bed
    treatment_level=$modifi_level_dir/${chrom}.treat.bed
    control_level=$modifi_level_dir/${chrom}.cont.bed

    output_dir=$chrom_bed_dir/sliding_window/${flank_length_type}.${flank_length}/${chrom}
    mkdir -p $output_dir
    $code_dir/s1_get_peak_submit_sliding_window_pos.R $(pwd) $chrom $peak_pos $flank_length_type $flank_length $treatment_level $control_level $output_dir
}

compute_mutation_density_whole_genome() {
    var_type=$1

    mutation_density_dir=$global_output_dir/$popu_symbol/$histone_modification_type/sliding_window_3D7_as_reference/relative.0.05/mutation_density
    mkdir -p $mutation_density_dir
    mean_variant_count=$mutation_density_dir/${var_type}_mean_variant_count
    # mean_variant_count=$mutation_density_dir/${var_type}_mean_variant_count_count
    # mean_variant_count=$mutation_density_dir/${var_type}_mean_variant_count_region_len

    rm -rf $mean_variant_count

    cd $histone_mofification_dir
    for chrom in $(echo $autosomes | tr " " "\n"); do
        chrom_var_count=""

        regions="$chrom_bed_dir/${chrom}.nopeak.bed"

        for w in $(seq 1 10); do
            regions+=" $chrom_bed_dir/sliding_window/relative.0.05/${chrom}/w$w.bed"
        done

        for region_bed in $(echo $regions | tr " " "\n"); do
            chrom_var_count+=" $(get_average_variant_count_for_chrom_whole_genome $chrom $region_bed)"

        done
        echo $chrom_var_count >>$mean_variant_count
    done
}

get_average_variant_count_for_chrom_whole_genome() {
    chrom=$1
    region_bed=$2
    chrom_number=$(echo $chrom | sed 's/Pf3D7_//g' | sed 's/_v3//g')

    chrom_region_len=$(awk '{print $3-$2}' $region_bed | awk '{s+=$1} END {print s}')
    if [ $chrom_region_len -gt 0 ] 2>/dev/null; then
        chrom_mutation_count=""
        if [ $var_type == "snps" ]; then
            chrom_mutation_count=$($bedtools intersect -a $variant_dir/${popu_symbol}_VQSLOD_gt0_${chrom_number}_correct_spanning_deletion_polysite.bed -b $region_bed | awk '{print $6}' | awk '{s+=$1} END {print s}')
        elif [ $var_type == "indels" ]; then
            chrom_mutation_count=$($bedtools intersect -a $variant_dir/${popu_symbol}_VQSLOD_gt0_${chrom_number}_correct_spanning_deletion_polysite.bed -b $region_bed | awk '{print $9}' | awk '{s+=$1} END {print s}')
        fi

        if [ $chrom_mutation_count -gt 0 ] 2>/dev/null; then
            echo ""
        else
            chrom_mutation_count=0
        fi
        chrom_region_mutation_count_mean=$(echo "scale=10;${chrom_mutation_count}/${chrom_region_len}" | bc)
        chrom_region_mutation_count_mean1=$(printf "%0.6f" $chrom_region_mutation_count_mean)
        echo $chrom_region_mutation_count_mean1
    else
        echo "NA"
    fi
}

compute_mutation_density_heterochromatin() {
    var_type=$1

    mutation_density_dir=$global_output_dir/$popu_symbol/$histone_modification_type/sliding_window_3D7_as_reference/relative.0.05/mutation_density
    mkdir -p $mutation_density_dir
    # mean_variant_count=$mutation_density_dir/${var_type}_mean_variant_count
    mean_variant_count=$mutation_density_dir/${var_type}_mean_variant_count_count
    # mean_variant_count=$mutation_density_dir/${var_type}_mean_variant_count_region_len

    rm -rf $mean_variant_count

    cd $histone_mofification_dir
    for chrom in $(echo $autosomes | tr " " "\n"); do
        chrom_var_count=""

        regions="$chrom_bed_dir/${chrom}.nopeak.bed"

        for w in $(seq 1 10); do
            regions+=" $chrom_bed_dir/sliding_window/relative.0.05/${chrom}/w$w.bed"
        done

        for region_bed in $(echo $regions | tr " " "\n"); do
            chrom_var_count+=" $(get_average_variant_count_for_chrom_heterochromatin $chrom $region_bed)"

        done
        echo $chrom_var_count >>$mean_variant_count
    done
}

get_average_variant_count_for_chrom_heterochromatin() {
    chrom=$1
    region_bed=$2
    chrom_number=$(echo $chrom | sed 's/Pf3D7_//g' | sed 's/_v3//g')

    chrom_region_len=$($bedtools subtract -a $region_bed -b $core_genome_bed | awk '{print $3-$2}' | awk '{s+=$1} END {print s}')
    if [ $chrom_region_len -gt 0 ] 2>/dev/null; then
        chrom_mutation_count=""
        if [ $var_type == "snps" ]; then
            chrom_mutation_count=$($bedtools subtract -a $region_bed -b $core_genome_bed | $bedtools intersect -a $variant_dir/${popu_symbol}_VQSLOD_gt0_${chrom_number}_correct_spanning_deletion_polysite.bed -b stdin | awk '{print $6}' | awk '{s+=$1} END {print s}')
        elif [ $var_type == "indels" ]; then
            chrom_mutation_count=$($bedtools subtract -a $region_bed -b $core_genome_bed | $bedtools intersect -a $variant_dir/${popu_symbol}_VQSLOD_gt0_${chrom_number}_correct_spanning_deletion_polysite.bed -b stdin | awk '{print $9}' | awk '{s+=$1} END {print s}')
        fi

        if [ $chrom_mutation_count -gt 0 ] 2>/dev/null; then
            echo ""
        else
            chrom_mutation_count=0
        fi
        # chrom_region_mutation_count_mean=$(echo "scale=10;${chrom_mutation_count}/${chrom_region_len}" | bc)
        # chrom_region_mutation_count_mean1=$(printf "%0.6f" $chrom_region_mutation_count_mean)
        # echo $chrom_region_mutation_count_mean1
        echo $chrom_mutation_count $chrom_region_len
    else
        echo "NA"
    fi
}

get_average_variant_count_for_chrom_count() {
    chrom=$1
    region_bed=$2
    chrom_number=$(echo $chrom | sed 's/Pf3D7_//g' | sed 's/_v3//g')

    # chrom_region_len=$(awk '{print $3-$2}' $region_bed | awk '{s+=$1} END {print s}')
    chrom_mutation_count=""
    if [ $var_type == "snps" ]; then
        chrom_mutation_count=$($bedtools intersect -a $variant_dir/${popu_symbol}_VQSLOD_gt0_${chrom_number}_correct_spanning_deletion_polysite.bed -b $region_bed | awk '{print $6}' | awk '{s+=$1} END {print s}')
    elif [ $var_type == "indels" ]; then
        chrom_mutation_count=$($bedtools intersect -a $variant_dir/${popu_symbol}_VQSLOD_gt0_${chrom_number}_correct_spanning_deletion_polysite.bed -b $region_bed | awk '{print $9}' | awk '{s+=$1} END {print s}')
    fi

    if [ $chrom_mutation_count -gt 0 ] 2>/dev/null; then
        echo ""
    else
        chrom_mutation_count=0
    fi
    echo $chrom_mutation_count
}

get_average_variant_count_for_chrom_region_len() {
    chrom=$1
    region_bed=$2
    chrom_number=$(echo $chrom | sed 's/Pf3D7_//g' | sed 's/_v3//g')

    chrom_region_len=$(awk '{print $3-$2}' $region_bed | awk '{s+=$1} END {print s}')
    echo $chrom_region_len
}
# VARIABLE NAMING TODO:
popu_symbol="ESEA_WSEA_OCE_SAM_SAS"
histone_modification_type="H3K9me3"

malaria_project_dir="/picb/evolgen2/users/gushanshan/projects/malaria"
code_dir=${malaria_project_dir}/code/histone_modification/2_compute_mutation_density

histone_modification_global_dir=$malaria_project_dir/dataAndResult/histone_methy
histone_mofification_dir=$histone_modification_global_dir/*${histone_modification_type}*/BAM_broad_nomodel_dup1
chrom_bed_dir=chrom
modifi_level_dir=modifi_level
treatment_level="*_treat_pileup.bdg"
control_level="*_control_lambda.bdg"

global_output_dir=${malaria_project_dir}/dataAndResult/1_2rd_initial_evaluation

variant_dir=$global_output_dir/$popu_symbol/variant_3D7
core_genome_bed="/picb/evolgen/users/gushanshan/projects/malaria/dataAndResult/ref_genome/pf_3D7/anno/3D7.core.bed"

peak_file=$histone_mofification_dir/*_peaks.bed
nopeak_file=$(echo $peak_file | sed 's/peaks/nopeak/g')
ref_dir="/picb/evolgen/users/gushanshan/projects/malaria/dataAndResult/ref_genome/pf_3D7"
chrom_len=$ref_dir/"genome/chrom.length"

autosomes="Pf3D7_01_v3 Pf3D7_02_v3 Pf3D7_03_v3 Pf3D7_04_v3 Pf3D7_05_v3 Pf3D7_06_v3 Pf3D7_07_v3 Pf3D7_08_v3 Pf3D7_09_v3 Pf3D7_10_v3 Pf3D7_11_v3 Pf3D7_12_v3 Pf3D7_13_v3 Pf3D7_14_v3"
bedtools="/picb/evolgen/users/gushanshan/software/bedtools/bedtools"
# VARIABLE NAMING for test module TODO:

# PROCESS TODO:
set -ex
cd $histone_mofification_dir
select_chrom_peak_nopeak_bed
get_chrom_treatment_control_histone_modification_level_bed
get_sliding_window
## 将全基因组中没有信号的区间全部作为control
compute_mutation_density_whole_genome "snps"
compute_mutation_density_whole_genome "indels"
## 将异染色质区域中没有信号的区间全部作为control，异染色质区域中有信号的区间作为peak
compute_mutation_density_heterochromatin "snps"
compute_mutation_density_heterochromatin "indels"
